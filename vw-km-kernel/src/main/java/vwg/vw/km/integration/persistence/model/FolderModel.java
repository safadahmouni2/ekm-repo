package vwg.vw.km.integration.persistence.model;
// Generated Jul 15, 2021 12:03:58 PM by Hibernate Tools 3.2.0.b9

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import vwg.vw.km.common.type.BaseDateTime;

/**
 * FolderModel generated by hbm2java
 */

@Entity
@Table(name = "T_ORDNER")
public class FolderModel extends vwg.vw.km.integration.persistence.model.base.BaseModel
		implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	
	@Id
	@Column(name = "ID")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_folder")
	@SequenceGenerator(name = "seq_folder", sequenceName = "SEQ_FOLDER", allocationSize = 1)
	private Long folderId;
	/**
	 * @hibernate.property column="UUIDORDNER" length="1024"
	 * 
	 */

	@Column(name = "UUIDORDNER", length = 1024)
	private String externalId;
	/**
	 * @hibernate.property column="BEZEICHNUNG" unique="true" length="50" not-null="true"
	 * 
	 */

	@Column(name = "BEZEICHNUNG", length = 100, nullable = false, unique = true)
	private String designation;
	/**
	 * @hibernate.property column="ERSTELLT_AM" length="7"
	 * 
	 */

	@Column(name = "ERSTELLT_AM", columnDefinition = "DATE", nullable = false)
	private BaseDateTime creationDate;
	/**
	 * @hibernate.property column="ERSTELLER_REF_ID" length="10"
	 * 
	 */

	@Column(name = "ERSTELLER_REF_ID", length = 10)
	private Long creatorRefId;
	/**
	 * @hibernate.property column="GEAENDERT_AM" length="7"
	 * 
	 */

	@Column(name = "GEAENDERT_AM", columnDefinition = "DATE")
	private BaseDateTime modificationDate;
	/**
	 * @hibernate.property column="GEAENDERT_VON_REF_ID" length="19"
	 * 
	 */

	@Column(name = "GEAENDERT_VON_REF_ID", length = 19)
	private Long modifierRefId;

	@ManyToOne
	@JoinColumn(name = "ORDNER_REF_ID")
	// TODO conflict with DB
	// @JoinColumn(name = "ORDNER_REF_ID", nullable = false, unique = true)
	private FolderModel folder;

	@ManyToOne
	@JoinColumn(name = "OBJEKT_TYP_REF_ID")
	private EnumObjectTypeModel objectType;

	public FolderModel() {
	}

	public FolderModel(String designation) {
		this.designation = designation;
	}

	public FolderModel(String externalId, String designation, BaseDateTime creationDate, Long creatorRefId,
			BaseDateTime modificationDate, Long modifierRefId, FolderModel folder, EnumObjectTypeModel objectType) {
		this.externalId = externalId;
		this.designation = designation;
		this.creationDate = creationDate;
		this.creatorRefId = creatorRefId;
		this.modificationDate = modificationDate;
		this.modifierRefId = modifierRefId;
		this.folder = folder;
		this.objectType = objectType;
	}

	public Long getFolderId() {
		return this.folderId;
	}

	private void setFolderId(Long folderId) {
		this.folderId = folderId;
	}

	/**
	 * * @hibernate.property column="UUIDORDNER" length="1024"
	 * 
	 */
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	/**
	 * * @hibernate.property column="BEZEICHNUNG" unique="true" length="50" not-null="true"
	 * 
	 */
	public String getDesignation() {
		return this.designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	/**
	 * * @hibernate.property column="ERSTELLT_AM" length="7"
	 * 
	 */
	public BaseDateTime getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(BaseDateTime creationDate) {
		this.creationDate = creationDate;
	}

	/**
	 * * @hibernate.property column="ERSTELLER_REF_ID" length="10"
	 * 
	 */
	public Long getCreatorRefId() {
		return this.creatorRefId;
	}

	public void setCreatorRefId(Long creatorRefId) {
		this.creatorRefId = creatorRefId;
	}

	/**
	 * * @hibernate.property column="GEAENDERT_AM" length="7"
	 * 
	 */
	public BaseDateTime getModificationDate() {
		return this.modificationDate;
	}

	public void setModificationDate(BaseDateTime modificationDate) {
		this.modificationDate = modificationDate;
	}

	/**
	 * * @hibernate.property column="GEAENDERT_VON_REF_ID" length="19"
	 * 
	 */
	public Long getModifierRefId() {
		return this.modifierRefId;
	}

	public void setModifierRefId(Long modifierRefId) {
		this.modifierRefId = modifierRefId;
	}

	public FolderModel getFolder() {
		return this.folder;
	}

	public void setFolder(FolderModel folder) {
		this.folder = folder;
	}

	public EnumObjectTypeModel getObjectType() {
		return this.objectType;
	}

	public void setObjectType(EnumObjectTypeModel objectType) {
		this.objectType = objectType;
	}

	/**
	 * toString
	 * 
	 * @return String
	 */
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("folderId").append("='").append(getFolderId()).append("' ");
		buffer.append("designation").append("='").append(getDesignation()).append("' ");
		buffer.append("creatorRefId").append("='").append(getCreatorRefId()).append("' ");
		buffer.append("modifierRefId").append("='").append(getModifierRefId()).append("' ");
		buffer.append("objectType").append("='").append(getObjectType()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof FolderModel)) {
			return false;
		}
		FolderModel castOther = (FolderModel) other;

		return ((this.getFolderId() == castOther.getFolderId()) || (this.getFolderId() != null
				&& castOther.getFolderId() != null && this.getFolderId().equals(castOther.getFolderId())));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (getFolderId() == null ? 0 : this.getFolderId().hashCode());

		return result;
	}

	// The following is extra code specified in the hbm.xml files

	public String getExternalFolderId() {
		if (getExternalId() == null) {
			return "ORDNER_" + getFolderId();
		} else {
			return getExternalId();
		}
	}

	// end of extra code specified in the hbm.xml files

}
